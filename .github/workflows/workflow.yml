name: Deploy to EC2
on:
  push:
    branches:
      - main
jobs:
  build_and_push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and Push deletePost Image
        run: |
          docker build -t ztencontacto/test-message:deletePost-latest ./deletePost
          docker push ztencontacto/test-message:deletePost-latest
      - name: Build and Push updatePost Image
        run: |
          docker build -t ztencontacto/test-message:updatePost-latest ./updatePost
          docker push ztencontacto/test-message:updatePost-latest
      - name: Build and Push getPost Image
        run: |
          docker build -t ztencontacto/test-message:getPost-latest ./getPost
          docker push ztencontacto/test-message:getPost-latest
      - name: Build and Push createPost Image
        run: |
          docker build -t ztencontacto/test-message:createPost-latest ./createPost
          docker push ztencontacto/test-message:createPost-latest

  deploy_ec2:
    name: Deploy on EC2
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Verify SSH Connection
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} "echo 'SSH Connection Successful'"

      - name: Debug - List Files in Workspace
        run: |
          echo "üìÇ Listing files in workspace..."
          ls -al

      - name: Verify docker-compose.yml Exists
        run: |
          if [ ! -f "docker-compose.yml" ]; then
            echo "‚ùå ERROR: docker-compose.yml not found!"
            exit 1
          fi

      - name: Copy docker-compose.yml to EC2
        run: |
          scp -i ~/.ssh/id_rsa docker-compose.yml ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/test-message/docker-compose.yml

      - name: Deploy to EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            echo "Ensuring project directory exists..."
            mkdir -p ~/test-message
            cd ~/test-message || { echo "Failed to access project directory"; exit 1; }

            echo "Checking if docker-compose.yml exists..."
            if [ ! -f "docker-compose.yml" ]; then
              echo "ERROR: docker-compose.yml not found!"
              exit 1
            fi

            echo "Stopping existing containers..."
            sudo docker-compose down || true

            echo "Pulling latest images..."
            sudo docker pull ztencontacto/test-message:deletePost-latest
            sudo docker pull ztencontacto/test-message:updatePost-latest
            sudo docker pull ztencontacto/test-message:getPost-latest
            sudo docker pull ztencontacto/test-message:createPost-latest

            echo "Setting environment variables..."
            export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
            export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
            export AWS_REGION="us-east-1"

            echo "Restarting services..."
            sudo docker-compose up -d
          EOF
